## Ignoring files ##
## 忽略某些文件 ##

A project will often generate files that you do 'not' want to track with git.
This typically includes files generated by a build process or temporary
backup files made by your editor. Of course, 'not' tracking files with git
is just a matter of 'not' calling "`git-add`" on them. But it quickly becomes
annoying to have these untracked files lying around; e.g. they make
"`git add .`" and "`git commit -a`" practically useless, and they keep
showing up in the output of "`git status`".


项目中经常会生成一些Git系统不需要追踪(track)的文件。典型的是在编译生成过程中
产生的文件或是编程器生成的临时备份文件。当然，你不追踪(track)这些文件，可以
平时不用"git add"去把它们加到索引中。 但是这样会很快变成一件烦人的事，你发现
项目中到处有未追踪(untracked)的文件; 这样也使"`git add .`" 和"`git commit -a`"
变得实际上没有用处，同时"`git status`"命令的输出也会有它们。

You can tell git to ignore certain files by creating a file called .gitignore
in the top level of your working directory, with contents such as:

你可以在你的顶层工作目录中添加一个叫".gitignore"的文件，来告诉Git系统要忽略
掉哪些文件，下面的是文件内容的示例:

    # Lines starting with '#' are considered comments.
    # 以'#' 开始的行，被视为注释.
    # Ignore any file named foo.txt.
    # 忽略掉所有文件名是 foo.txt 的文件.
    foo.txt
    # Ignore (generated) html files,
    # 忽略所有生成的 html 文件,
    *.html
    # except foo.html which is maintained by hand.
    # foo.html是手工维护的，所以例外.
    !foo.html
    # Ignore objects and archives.
    #  忽略所有.o 和 .a文件.
    *.[oa]

See linkgit:gitignore[5] for a detailed explanation of the syntax.  You can
also place .gitignore files in other directories in your working tree, and they
will apply to those directories and their subdirectories.  The `.gitignore`
files can be added to your repository like any other files 
(just run `git add .gitignore` and `git commit`, as usual), which is convenient when the exclude
patterns (such as patterns matching build output files) would also make sense
for other users who clone your repository.

你可以点这里 linkgit:gitignore[5] 查看一下详细的语法解释. 你也可以把".gitignore"
这个文件放到工作树(working tree)里的其它目录中，这就会它和它的子目录起忽略(ignore)
指定文件的作用。`.gitignor`文件同样可以其它文件一样加到项目仓库里( 就像这样用
`git add .gitignore` 和 `git commit`), 这样项目里的其它开发者也能共享同一套忽略
文件规则。

If you wish the exclude patterns to affect only certain repositories
(instead of every repository for a given project), you may instead put
them in a file in your repository named .git/info/exclude, or in any file
specified by the `core.excludesfile` configuration variable.  Some git
commands can also take exclude patterns directly on the command line.
See linkgit:gitignore[5] for the details.

如果你想忽略规则只对特定的仓库起作用,你可以把这些忽略规则写到你的仓库下
.git/info/exclude文件中，或是写在Git配置变量`core.excludesfile`中指定的
文件里。有些Git命令也可在命令行参数中指定忽略规则，你可以在这里:linkgit:gitignore[5]
查看详细的用法。


